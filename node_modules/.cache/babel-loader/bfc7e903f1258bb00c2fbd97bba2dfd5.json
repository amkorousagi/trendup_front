{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport { embedProps } from './tools';\nimport '../sigma/main';\n/**\n *\n * Sigma - React.JS flow-typed interface for Sigma js library - fastest opensource rendering engine for network graphs.\n * Sigma makes it easy to publish networks on Web pages, and allows developers to integrate network exploration in\n * rich Web applications.\n *\n * Parameter types\n * ```\n * type Sigma$Graph$Data = {\n *   nodes: [Sigma$Node],\n *   edges: [Sigma$Edge]\n * };\n *\n * type Sigma$Node = {\n *   id: string,\n *   label?: string,\n *   x?: number,\n *   y?: number,\n *   size?: number,\n *   color?: color\n * };\n *\n * type Sigma$Edge = {\n *   id: string,\n *   source: string,\n *   target: string,\n *   label?: string,\n *   color?: color\n * };\n * ```\n *\n *\n * @signature `<Sigma graph={graph} settings={settings} onClickNode={func}.../>`\n *\n * @param {CSS} style   CSS style description for main div holding graph, should be specified in React format\n * @param {Sigma$Settings} settings     js object with sigma initialization options, for full list see [sigma settings page](https://github.com/jacomyal/sigma.js/wiki/Settings)\n * @param {string} renderer     can be \"webgl\" or \"canvas\"\n * @param {Sigma$Graph$Data} graph   js object with array of nodes and edges used to initialize sigma\n * @param {Sigma$ErrorHandler} onSigmaException      set sigma callback for sigma exceptions / errors\n * @param {Sigma$EventHandler} onClickNode      set sigma callback for \"clickNode\" event (see below)\n * @param {Sigma$EventHandler} onOverNode      set sigma callback for \"overNode\" event\n * @param {Sigma$EventHandler} onOutNode      set sigma callback for \"outNode\" event\n * @param {Sigma$EventHandler} onClickEdge     set sigma callback for \"clickEdge\" event\n * @param {Sigma$EventHandler} onOverEdge      set sigma callback for \"overEdge\" event\n * @param {Sigma$EventHandler} onOutEdge      set sigma callback for \"outEdge\" event\n *\n * @example\n * Can be composed with sigma sub-components using JSX syntax\n * <Sigma renderer=\"webgl\" style={{maxWidth:\"inherit\", height:\"400px\"}}\n *        settings={{drawEdges:false}}\n *        onOverNode={e => console.log(\"Mouse over node: \" + e.data.node.label)}>\n *        graph={{nodes:[\"id0\", \"id1\"], edges:[{id:\"e0\",source:\"id0\",target:\"id1\"}]}}>\n *   <RelativeSize initialSize={8}/>\n * </Sigma>\n *\n */\n\nvar Sigma = /*#__PURE__*/function (_React$Component) {\n  _inherits(Sigma, _React$Component);\n\n  function Sigma(props) {\n    var _this;\n\n    _classCallCheck(this, Sigma);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sigma).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"initRenderer\", function (container) {\n      if (container) {\n        var options = {\n          container: container\n        };\n        if (_this.props.renderer) options.type = _this.props.renderer;\n        _this.sigmaRenderer = _this.sigma.addRenderer(options);\n\n        _this.sigma.refresh();\n\n        _this.setState({\n          renderer: true\n        });\n      } else if (_this.sigmaRenderer) {\n        _this.sigma.killRenderer(_this.sigmaRenderer);\n\n        _this.sigmaRenderer = null;\n\n        _this.setState({\n          renderer: false\n        });\n      }\n    });\n\n    _this.state = {\n      renderer: false\n    };\n    var settings = _this.props.settings ? _this.props.settings : {};\n    _this.sigma = new sigma({\n      settings: settings\n    });\n    if (CustomShapes) CustomShapes.init(_this.sigma);\n    Sigma.bindHandlers(_this.props, _this.sigma);\n\n    if (_this.props.graph) {\n      try {\n        _this.sigma.graph.read(_this.props.graph);\n      } catch (e) {\n        if (_this.props.onSigmaException) _this.props.onSigmaException(e);\n      }\n    }\n\n    return _this;\n  }\n\n  _createClass(Sigma, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.sigma.kill();\n      this.sigmaRenderer = null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.state.renderer ? embedProps(this.props.children, {\n        sigma: this.sigma\n      }) : null;\n      return React.createElement(\"div\", {\n        ref: this.initRenderer,\n        style: this.props.style\n      }, children);\n    }\n    /**\n    Initialize event handlers with sigma.\n    \n    Event handler function receives [Sigma Event](https://github.com/jacomyal/sigma.js/wiki/Events-API)\n    with the structure of following type:\n    ```\n    type Sigma$Event = {\n      data: {\n        node?: Neo4j$Node, //for node events is sigma node data\n        edge?: Neo4j$Edge, //for edge events is sigma edge data\n        captor: {   // information about event handler, for instance position on the page {clientX, clientY}\n          clientX: number,\n          clientY: number\n    }}}\n    \n    type Sigma$EventHandler = (node:Sigma$Event) => void\n    \n    ```\n    **/\n\n  }], [{\n    key: \"bindHandlers\",\n    value: function bindHandlers(handlers, sigma) {\n      [\"clickNode\", \"overNode\", \"outNode\", \"clickEdge\", \"overEdge\", \"outEdge\", \"clickStage\"].forEach(function (event) {\n        var handler = \"on\" + event[0].toUpperCase() + event.substr(1);\n\n        if (handlers[handler]) {\n          sigma.bind(event, handlers[handler]);\n        }\n      });\n    }\n  }]);\n\n  return Sigma;\n}(React.Component);\n\n_defineProperty(Sigma, \"defaultProps\", {\n  settings: {\n    defaultNodeColor: \"#3388AA\",\n    defaultLabelSize: 8,\n    defaultLabelColor: \"#777\",\n    labelThreshold: 12,\n    hoverFontStyle: \"text-size: 11\",\n    batchEdgesDrawing: true,\n    drawEdges: true,\n    drawEdgeLabels: false\n  },\n  style: {\n    maxWidth: \"inherit\",\n    height: \"400px\"\n  }\n});\n\n_defineProperty(Sigma, \"propTypes\", {\n  settings: function settings() {\n    return (typeof Sigma$Settings === \"function\" ? PropTypes.instanceOf(Sigma$Settings) : PropTypes.any).apply(this, arguments);\n  },\n  renderer: PropTypes.oneOf([\"webgl\", \"canvas\", \"svg\"]),\n  style: PropTypes.object,\n  children: PropTypes.any,\n  graph: function graph() {\n    return (typeof Sigma$Graph$Data === \"function\" ? PropTypes.instanceOf(Sigma$Graph$Data) : PropTypes.any).apply(this, arguments);\n  },\n  onSigmaException: PropTypes.func,\n  onClickNode: PropTypes.func,\n  onClickEdge: PropTypes.func,\n  onOverNode: PropTypes.func,\n  onOutNode: PropTypes.func,\n  onOverEdge: PropTypes.func,\n  // TODO: onOverEdge does not work?\n  onOutEdge: PropTypes.func,\n  onClickStage: PropTypes.func\n});\n\nexport default Sigma;\nimport PropTypes from \"prop-types\";","map":{"version":3,"sources":["/home/psc/react-template/react-material-dashboard/node_modules/react-sigma/es/Sigma.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","call","_assertThisInitialized","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","ReferenceError","_inherits","subClass","superClass","create","value","_setPrototypeOf","p","_defineProperty","React","embedProps","Sigma","_React$Component","_this","container","options","renderer","type","sigmaRenderer","sigma","addRenderer","refresh","setState","killRenderer","state","settings","CustomShapes","init","bindHandlers","graph","read","e","onSigmaException","componentWillUnmount","kill","render","children","createElement","ref","initRenderer","style","handlers","forEach","event","handler","toUpperCase","substr","bind","Component","defaultNodeColor","defaultLabelSize","defaultLabelColor","labelThreshold","hoverFontStyle","batchEdgesDrawing","drawEdges","drawEdgeLabels","maxWidth","height","Sigma$Settings","PropTypes","instanceOf","any","apply","arguments","oneOf","object","Sigma$Graph$Data","func","onClickNode","onClickEdge","onOverNode","onOutNode","onOverEdge","onOutEdge","onClickStage"],"mappings":"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","sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { embedProps } from './tools';\nimport '../sigma/main';\n\n/**\n *\n * Sigma - React.JS flow-typed interface for Sigma js library - fastest opensource rendering engine for network graphs.\n * Sigma makes it easy to publish networks on Web pages, and allows developers to integrate network exploration in\n * rich Web applications.\n *\n * Parameter types\n * ```\n * type Sigma$Graph$Data = {\n *   nodes: [Sigma$Node],\n *   edges: [Sigma$Edge]\n * };\n *\n * type Sigma$Node = {\n *   id: string,\n *   label?: string,\n *   x?: number,\n *   y?: number,\n *   size?: number,\n *   color?: color\n * };\n *\n * type Sigma$Edge = {\n *   id: string,\n *   source: string,\n *   target: string,\n *   label?: string,\n *   color?: color\n * };\n * ```\n *\n *\n * @signature `<Sigma graph={graph} settings={settings} onClickNode={func}.../>`\n *\n * @param {CSS} style   CSS style description for main div holding graph, should be specified in React format\n * @param {Sigma$Settings} settings     js object with sigma initialization options, for full list see [sigma settings page](https://github.com/jacomyal/sigma.js/wiki/Settings)\n * @param {string} renderer     can be \"webgl\" or \"canvas\"\n * @param {Sigma$Graph$Data} graph   js object with array of nodes and edges used to initialize sigma\n * @param {Sigma$ErrorHandler} onSigmaException      set sigma callback for sigma exceptions / errors\n * @param {Sigma$EventHandler} onClickNode      set sigma callback for \"clickNode\" event (see below)\n * @param {Sigma$EventHandler} onOverNode      set sigma callback for \"overNode\" event\n * @param {Sigma$EventHandler} onOutNode      set sigma callback for \"outNode\" event\n * @param {Sigma$EventHandler} onClickEdge     set sigma callback for \"clickEdge\" event\n * @param {Sigma$EventHandler} onOverEdge      set sigma callback for \"overEdge\" event\n * @param {Sigma$EventHandler} onOutEdge      set sigma callback for \"outEdge\" event\n *\n * @example\n * Can be composed with sigma sub-components using JSX syntax\n * <Sigma renderer=\"webgl\" style={{maxWidth:\"inherit\", height:\"400px\"}}\n *        settings={{drawEdges:false}}\n *        onOverNode={e => console.log(\"Mouse over node: \" + e.data.node.label)}>\n *        graph={{nodes:[\"id0\", \"id1\"], edges:[{id:\"e0\",source:\"id0\",target:\"id1\"}]}}>\n *   <RelativeSize initialSize={8}/>\n * </Sigma>\n *\n */\nvar Sigma =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Sigma, _React$Component);\n\n  function Sigma(props) {\n    var _this;\n\n    _classCallCheck(this, Sigma);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Sigma).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"initRenderer\", function (container) {\n      if (container) {\n        var options = {\n          container: container\n        };\n        if (_this.props.renderer) options.type = _this.props.renderer;\n        _this.sigmaRenderer = _this.sigma.addRenderer(options);\n\n        _this.sigma.refresh();\n\n        _this.setState({\n          renderer: true\n        });\n      } else if (_this.sigmaRenderer) {\n        _this.sigma.killRenderer(_this.sigmaRenderer);\n\n        _this.sigmaRenderer = null;\n\n        _this.setState({\n          renderer: false\n        });\n      }\n    });\n\n    _this.state = {\n      renderer: false\n    };\n    var settings = _this.props.settings ? _this.props.settings : {};\n    _this.sigma = new sigma({\n      settings: settings\n    });\n    if (CustomShapes) CustomShapes.init(_this.sigma);\n    Sigma.bindHandlers(_this.props, _this.sigma);\n\n    if (_this.props.graph) {\n      try {\n        _this.sigma.graph.read(_this.props.graph);\n      } catch (e) {\n        if (_this.props.onSigmaException) _this.props.onSigmaException(e);\n      }\n    }\n\n    return _this;\n  }\n\n  _createClass(Sigma, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.sigma.kill();\n      this.sigmaRenderer = null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.state.renderer ? embedProps(this.props.children, {\n        sigma: this.sigma\n      }) : null;\n      return React.createElement(\"div\", {\n        ref: this.initRenderer,\n        style: this.props.style\n      }, children);\n    }\n    /**\n    Initialize event handlers with sigma.\n    \n    Event handler function receives [Sigma Event](https://github.com/jacomyal/sigma.js/wiki/Events-API)\n    with the structure of following type:\n    ```\n    type Sigma$Event = {\n      data: {\n        node?: Neo4j$Node, //for node events is sigma node data\n        edge?: Neo4j$Edge, //for edge events is sigma edge data\n        captor: {   // information about event handler, for instance position on the page {clientX, clientY}\n          clientX: number,\n          clientY: number\n    }}}\n    \n    type Sigma$EventHandler = (node:Sigma$Event) => void\n    \n    ```\n    **/\n\n  }], [{\n    key: \"bindHandlers\",\n    value: function bindHandlers(handlers, sigma) {\n      [\"clickNode\", \"overNode\", \"outNode\", \"clickEdge\", \"overEdge\", \"outEdge\", \"clickStage\"].forEach(function (event) {\n        var handler = \"on\" + event[0].toUpperCase() + event.substr(1);\n\n        if (handlers[handler]) {\n          sigma.bind(event, handlers[handler]);\n        }\n      });\n    }\n  }]);\n\n  return Sigma;\n}(React.Component);\n\n_defineProperty(Sigma, \"defaultProps\", {\n  settings: {\n    defaultNodeColor: \"#3388AA\",\n    defaultLabelSize: 8,\n    defaultLabelColor: \"#777\",\n    labelThreshold: 12,\n    hoverFontStyle: \"text-size: 11\",\n    batchEdgesDrawing: true,\n    drawEdges: true,\n    drawEdgeLabels: false\n  },\n  style: {\n    maxWidth: \"inherit\",\n    height: \"400px\"\n  }\n});\n\n_defineProperty(Sigma, \"propTypes\", {\n  settings: function settings() {\n    return (typeof Sigma$Settings === \"function\" ? PropTypes.instanceOf(Sigma$Settings) : PropTypes.any).apply(this, arguments);\n  },\n  renderer: PropTypes.oneOf([\"webgl\", \"canvas\", \"svg\"]),\n  style: PropTypes.object,\n  children: PropTypes.any,\n  graph: function graph() {\n    return (typeof Sigma$Graph$Data === \"function\" ? PropTypes.instanceOf(Sigma$Graph$Data) : PropTypes.any).apply(this, arguments);\n  },\n  onSigmaException: PropTypes.func,\n  onClickNode: PropTypes.func,\n  onClickEdge: PropTypes.func,\n  onOverNode: PropTypes.func,\n  onOutNode: PropTypes.func,\n  onOverEdge: PropTypes.func,\n  // TODO: onOverEdge does not work?\n  onOutEdge: PropTypes.func,\n  onClickStage: PropTypes.func\n});\n\nexport default Sigma;\nimport PropTypes from \"prop-types\";"]},"metadata":{},"sourceType":"module"}