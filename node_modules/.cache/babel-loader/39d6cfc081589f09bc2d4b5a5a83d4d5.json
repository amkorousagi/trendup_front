{"ast":null,"code":"var _jsxFileName = \"/home/psc/react-template/react-material-dashboard/src/views/Trendup/clothes/trendrank/index.js\";\nimport React, { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { Box, Container, makeStyles, Button, Grid, Card } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\nimport Script from 'react-load-script';\nimport { Rating } from '@material-ui/lab';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js'; //import data from './data';\n\nfunction rating_mean_func(a) {\n  var rating_mean; //5, 15, 25, 35 \n\n  if (a > 35) {\n    rating_mean = 5;\n  } else if (a > 25) {\n    rating_mean = 4;\n  } else if (a > 15) {\n    rating_mean = 3;\n  } else if (a > 5) {\n    rating_mean = 2;\n  } else {\n    rating_mean = 1;\n  }\n\n  return rating_mean;\n}\n\nfunction rating_rms_func(a) {\n  var rating_rms; //2,4,6,8 -rms\n\n  if (a > 8) {\n    rating_rms = 1;\n  } else if (a > 6) {\n    rating_rms = 2;\n  } else if (a > 4) {\n    rating_rms = 3;\n  } else if (a > 2) {\n    rating_rms = 4;\n  } else {\n    rating_rms = 5;\n  }\n\n  return rating_rms;\n}\n\nfunction is_increasing_func(a) {\n  if (a) {\n    return \"검색도가 상승하는 추세입니다!\";\n  } else {\n    return \"검색도가 상승하는 추세가 아닙니다.\";\n  }\n}\n\nfunction rating_algo_func(dict) {\n  var a = dict.KNN < dict.SVM ? dict.SVM : dict.KNN;\n  var rating_algo; //90,85,80,70\n\n  if (a > 90) {\n    rating_algo = 5;\n  } else if (a > 85) {\n    rating_algo = 4;\n  } else if (a > 80) {\n    rating_algo = 3;\n  } else if (a > 70) {\n    rating_algo = 2;\n  } else {\n    rating_algo = 1;\n  }\n\n  return rating_algo;\n}\n\nfunction myChart() {\n  return {\n    \"labels\": [\"2016-01-04\", \"2016-01-11\", \"2016-01-18\", \"2016-01-25\", \"2016-02-01\", \"2016-02-08\", \"2016-02-15\", \"2016-02-22\", \"2016-02-29\", \"2016-03-07\", \"2016-03-14\", \"2016-03-21\", \"2016-03-28\", \"2016-04-04\", \"2016-04-11\", \"2016-04-18\", \"2016-04-25\", \"2016-05-02\", \"2016-05-09\", \"2016-05-16\", \"2016-05-23\", \"2016-05-30\", \"2016-06-06\", \"2016-06-13\", \"2016-06-20\", \"2016-06-27\", \"2016-07-04\", \"2016-07-11\", \"2016-07-18\", \"2016-07-25\", \"2016-08-01\", \"2016-08-08\", \"2016-08-15\", \"2016-08-22\", \"2016-08-29\", \"2016-09-05\", \"2016-09-12\", \"2016-09-19\", \"2016-09-26\", \"2016-10-03\", \"2016-10-10\", \"2016-10-17\", \"2016-10-24\", \"2016-10-31\", \"2016-11-07\", \"2016-11-14\", \"2016-11-21\", \"2016-11-28\", \"2016-12-05\", \"2016-12-12\", \"2016-12-19\", \"2016-12-26\", \"2017-01-02\", \"2017-01-09\", \"2017-01-16\", \"2017-01-23\", \"2017-01-30\", \"2017-02-06\", \"2017-02-13\", \"2017-02-20\", \"2017-02-27\", \"2017-03-06\", \"2017-03-13\", \"2017-03-20\", \"2017-03-27\", \"2017-04-03\", \"2017-04-10\", \"2017-04-17\", \"2017-04-24\", \"2017-05-01\", \"2017-05-08\", \"2017-05-15\", \"2017-05-22\", \"2017-05-29\", \"2017-06-05\", \"2017-06-12\", \"2017-06-19\", \"2017-06-26\", \"2017-07-03\", \"2017-07-10\", \"2017-07-17\", \"2017-07-24\", \"2017-07-31\", \"2017-08-07\", \"2017-08-14\", \"2017-08-21\", \"2017-08-28\", \"2017-09-04\", \"2017-09-11\", \"2017-09-18\", \"2017-09-25\", \"2017-10-02\", \"2017-10-09\", \"2017-10-16\", \"2017-10-23\", \"2017-10-30\", \"2017-11-06\", \"2017-11-13\", \"2017-11-20\", \"2017-11-27\", \"2017-12-04\", \"2017-12-11\", \"2017-12-18\", \"2017-12-25\", \"2018-01-01\", \"2018-01-08\", \"2018-01-15\", \"2018-01-22\", \"2018-01-29\", \"2018-02-05\", \"2018-02-12\", \"2018-02-19\", \"2018-02-26\", \"2018-03-05\", \"2018-03-12\", \"2018-03-19\", \"2018-03-26\", \"2018-04-02\", \"2018-04-09\", \"2018-04-16\", \"2018-04-23\", \"2018-04-30\", \"2018-05-07\", \"2018-05-14\", \"2018-05-21\", \"2018-05-28\", \"2018-06-04\", \"2018-06-11\", \"2018-06-18\", \"2018-06-25\", \"2018-07-02\", \"2018-07-09\", \"2018-07-16\", \"2018-07-23\", \"2018-07-30\", \"2018-08-06\", \"2018-08-13\", \"2018-08-20\", \"2018-08-27\", \"2018-09-03\", \"2018-09-10\", \"2018-09-17\", \"2018-09-24\", \"2018-10-01\", \"2018-10-08\", \"2018-10-15\", \"2018-10-22\", \"2018-10-29\", \"2018-11-05\", \"2018-11-12\", \"2018-11-19\", \"2018-11-26\", \"2018-12-03\", \"2018-12-10\", \"2018-12-17\", \"2018-12-24\", \"2018-12-31\", \"2019-01-07\", \"2019-01-14\", \"2019-01-21\", \"2019-01-28\", \"2019-02-04\", \"2019-02-11\", \"2019-02-18\", \"2019-02-25\", \"2019-03-04\", \"2019-03-11\", \"2019-03-18\", \"2019-03-25\", \"2019-04-01\", \"2019-04-08\", \"2019-04-15\", \"2019-04-22\", \"2019-04-29\", \"2019-05-06\", \"2019-05-13\", \"2019-05-20\", \"2019-05-27\", \"2019-06-03\", \"2019-06-10\", \"2019-06-17\", \"2019-06-24\", \"2019-07-01\", \"2019-07-08\", \"2019-07-15\", \"2019-07-22\", \"2019-07-29\", \"2019-08-05\", \"2019-08-12\", \"2019-08-19\", \"2019-08-26\", \"2019-09-02\", \"2019-09-09\", \"2019-09-16\", \"2019-09-23\", \"2019-09-30\", \"2019-10-07\", \"2019-10-14\", \"2019-10-21\", \"2019-10-28\", \"2019-11-04\", \"2019-11-11\", \"2019-11-18\", \"2019-11-25\", \"2019-12-02\", \"2019-12-09\", \"2019-12-16\", \"2019-12-23\"],\n    \"datasets\": {\n      \"label\": \"My First dataset\",\n      \"fillColor\": \"rgba(220,220,220,0.2)\",\n      \"strokeColor\": \"rgba(220,220,220,1)\",\n      \"pointColor\": \"rgba(220,220,220,1)\",\n      \"pointStrokeColor\": \"#fff\",\n      \"pointHighlightFill\": \"#fff\",\n      \"pointHighlightStroke\": \"rgba(220,220,220,1)\",\n      \"data\": [37, 26, 26, 4, 4, 52, 27, 27, 28, 29, 9, 31, 35, 72, 30, 48, 79, 89, 99, 121, 122, 102, 104, 122, 125, 82, 99, 112, 142, 138, 125, 70, 57, 21, 41, 40, 30, 8, 26, 7, 4, 5, 25, 4, 25, 25, 25, 44, 23, 4, 24, 5, 45, 25, 6, 5, 8, 27, 45, 26, 9, 9, 29, 38, 30, 34, 42, 48, 53, 140, 130, 153, 102, 93, 74, 86, 103, 104, 117, 141, 107, 129, 96, 99, 40, 36, 9, 47, 8, 46, 45, 4, 24, 24, 44, 5, 23, 5, 23, 22, 5, 5, 22, 22, 6, 6, 41, 7, 25, 25, 6, 9, 28, 11, 14, 13, 19, 39, 53, 54, 57, 90, 72, 107, 114, 123, 117, 98, 86, 152, 87, 154, 144, 159, 114, 90, 87, 78, 46, 44, 33, 58, 24, 23, 5, 5, 22, 5, 5, 5, 21, 22, 5, 5, 23, 5, 25, 25, 7, 7, 5, 26, 34, 43, 27, 11, 27, 12, 29, 30, 15, 72, 81, 67, 61, 128, 97, 83, 112, 71, 99, 130, 106, 98, 129, 150, 132, 144, 75, 56, 57, 12, 61, 26, 24, 25, 39, 7, 7, 7, 23, 21, 6, 22, 7, 7, 7, 6]\n    }\n  };\n}\n\ngraph_data = {\n  \"labels\": [\"2016-01-04\", \"2016-01-11\", \"2016-01-18\", \"2016-01-25\", \"2016-02-01\", \"2016-02-08\", \"2016-02-15\", \"2016-02-22\", \"2016-02-29\", \"2016-03-07\", \"2016-03-14\", \"2016-03-21\", \"2016-03-28\", \"2016-04-04\", \"2016-04-11\", \"2016-04-18\", \"2016-04-25\", \"2016-05-02\", \"2016-05-09\", \"2016-05-16\", \"2016-05-23\", \"2016-05-30\", \"2016-06-06\", \"2016-06-13\", \"2016-06-20\", \"2016-06-27\", \"2016-07-04\", \"2016-07-11\", \"2016-07-18\", \"2016-07-25\", \"2016-08-01\", \"2016-08-08\", \"2016-08-15\", \"2016-08-22\", \"2016-08-29\", \"2016-09-05\", \"2016-09-12\", \"2016-09-19\", \"2016-09-26\", \"2016-10-03\", \"2016-10-10\", \"2016-10-17\", \"2016-10-24\", \"2016-10-31\", \"2016-11-07\", \"2016-11-14\", \"2016-11-21\", \"2016-11-28\", \"2016-12-05\", \"2016-12-12\", \"2016-12-19\", \"2016-12-26\", \"2017-01-02\", \"2017-01-09\", \"2017-01-16\", \"2017-01-23\", \"2017-01-30\", \"2017-02-06\", \"2017-02-13\", \"2017-02-20\", \"2017-02-27\", \"2017-03-06\", \"2017-03-13\", \"2017-03-20\", \"2017-03-27\", \"2017-04-03\", \"2017-04-10\", \"2017-04-17\", \"2017-04-24\", \"2017-05-01\", \"2017-05-08\", \"2017-05-15\", \"2017-05-22\", \"2017-05-29\", \"2017-06-05\", \"2017-06-12\", \"2017-06-19\", \"2017-06-26\", \"2017-07-03\", \"2017-07-10\", \"2017-07-17\", \"2017-07-24\", \"2017-07-31\", \"2017-08-07\", \"2017-08-14\", \"2017-08-21\", \"2017-08-28\", \"2017-09-04\", \"2017-09-11\", \"2017-09-18\", \"2017-09-25\", \"2017-10-02\", \"2017-10-09\", \"2017-10-16\", \"2017-10-23\", \"2017-10-30\", \"2017-11-06\", \"2017-11-13\", \"2017-11-20\", \"2017-11-27\", \"2017-12-04\", \"2017-12-11\", \"2017-12-18\", \"2017-12-25\", \"2018-01-01\", \"2018-01-08\", \"2018-01-15\", \"2018-01-22\", \"2018-01-29\", \"2018-02-05\", \"2018-02-12\", \"2018-02-19\", \"2018-02-26\", \"2018-03-05\", \"2018-03-12\", \"2018-03-19\", \"2018-03-26\", \"2018-04-02\", \"2018-04-09\", \"2018-04-16\", \"2018-04-23\", \"2018-04-30\", \"2018-05-07\", \"2018-05-14\", \"2018-05-21\", \"2018-05-28\", \"2018-06-04\", \"2018-06-11\", \"2018-06-18\", \"2018-06-25\", \"2018-07-02\", \"2018-07-09\", \"2018-07-16\", \"2018-07-23\", \"2018-07-30\", \"2018-08-06\", \"2018-08-13\", \"2018-08-20\", \"2018-08-27\", \"2018-09-03\", \"2018-09-10\", \"2018-09-17\", \"2018-09-24\", \"2018-10-01\", \"2018-10-08\", \"2018-10-15\", \"2018-10-22\", \"2018-10-29\", \"2018-11-05\", \"2018-11-12\", \"2018-11-19\", \"2018-11-26\", \"2018-12-03\", \"2018-12-10\", \"2018-12-17\", \"2018-12-24\", \"2018-12-31\", \"2019-01-07\", \"2019-01-14\", \"2019-01-21\", \"2019-01-28\", \"2019-02-04\", \"2019-02-11\", \"2019-02-18\", \"2019-02-25\", \"2019-03-04\", \"2019-03-11\", \"2019-03-18\", \"2019-03-25\", \"2019-04-01\", \"2019-04-08\", \"2019-04-15\", \"2019-04-22\", \"2019-04-29\", \"2019-05-06\", \"2019-05-13\", \"2019-05-20\", \"2019-05-27\", \"2019-06-03\", \"2019-06-10\", \"2019-06-17\", \"2019-06-24\", \"2019-07-01\", \"2019-07-08\", \"2019-07-15\", \"2019-07-22\", \"2019-07-29\", \"2019-08-05\", \"2019-08-12\", \"2019-08-19\", \"2019-08-26\", \"2019-09-02\", \"2019-09-09\", \"2019-09-16\", \"2019-09-23\", \"2019-09-30\", \"2019-10-07\", \"2019-10-14\", \"2019-10-21\", \"2019-10-28\", \"2019-11-04\", \"2019-11-11\", \"2019-11-18\", \"2019-11-25\", \"2019-12-02\", \"2019-12-09\", \"2019-12-16\", \"2019-12-23\"],\n  \"datasets\": {\n    \"label\": \"My First dataset\",\n    \"fillColor\": \"rgba(220,220,220,0.2)\",\n    \"strokeColor\": \"rgba(220,220,220,1)\",\n    \"pointColor\": \"rgba(220,220,220,1)\",\n    \"pointStrokeColor\": \"#fff\",\n    \"pointHighlightFill\": \"#fff\",\n    \"pointHighlightStroke\": \"rgba(220,220,220,1)\",\n    \"data\": [37, 26, 26, 4, 4, 52, 27, 27, 28, 29, 9, 31, 35, 72, 30, 48, 79, 89, 99, 121, 122, 102, 104, 122, 125, 82, 99, 112, 142, 138, 125, 70, 57, 21, 41, 40, 30, 8, 26, 7, 4, 5, 25, 4, 25, 25, 25, 44, 23, 4, 24, 5, 45, 25, 6, 5, 8, 27, 45, 26, 9, 9, 29, 38, 30, 34, 42, 48, 53, 140, 130, 153, 102, 93, 74, 86, 103, 104, 117, 141, 107, 129, 96, 99, 40, 36, 9, 47, 8, 46, 45, 4, 24, 24, 44, 5, 23, 5, 23, 22, 5, 5, 22, 22, 6, 6, 41, 7, 25, 25, 6, 9, 28, 11, 14, 13, 19, 39, 53, 54, 57, 90, 72, 107, 114, 123, 117, 98, 86, 152, 87, 154, 144, 159, 114, 90, 87, 78, 46, 44, 33, 58, 24, 23, 5, 5, 22, 5, 5, 5, 21, 22, 5, 5, 23, 5, 25, 25, 7, 7, 5, 26, 34, 43, 27, 11, 27, 12, 29, 30, 15, 72, 81, 67, 61, 128, 97, 83, 112, 71, 99, 130, 106, 98, 129, 150, 132, 144, 75, 56, 57, 12, 61, 26, 24, 25, 39, 7, 7, 7, 23, 21, 6, 22, 7, 7, 7, 6]\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n})); //const classes = useStyles();\n//customers = []\n\nexport default class CustomerListView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customers: [],\n      clicked_keyword: \"\",\n      datafeature: [],\n      mlacurracy: [],\n      graph: [],\n      graph_fun: myChart()\n    };\n    this.handler = this.handler.bind(this);\n  }\n\n  handler(keyword) {\n    this.setState({\n      clicked_keyword: keyword\n    });\n    fetch('http://localhost:4000/raw?keyword=' + keyword).then(response => response.json()).then(data => {\n      this.setState({\n        graph: data.data\n      });\n    });\n    fetch('http://localhost:4000/datafeature?keyword=' + keyword).then(response => response.json()).then(data => {\n      this.setState({\n        datafeature: data.data\n      });\n    });\n    fetch('http://localhost:4000/mlacurracy?keyword=' + keyword).then(response => response.json()).then(data => {\n      this.setState({\n        mlacurracy: data.data\n      });\n    });\n  } //console.log(\"hello\")\n\n\n  async componentDidMount() {\n    fetch('http://localhost:4000/products').then(response => response.json()).then(data => {\n      this.setState({\n        customers: data.data.map(customer => {\n          return {\n            id: uuid(),\n            rank: customer.rank,\n            keyword: customer.keyword,\n            gender: customer.gender,\n            date_: customer.date_,\n            score: customer.score\n          };\n        })\n      });\n    });\n  }\n\n  render() {\n    if (this.state[\"clicked_keyword\"] == \"\") {\n      return /*#__PURE__*/React.createElement(Container, {\n        maxWidth: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Toolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Box, {\n        mt: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Results, {\n        customers: this.state[\"customers\"],\n        handler: this.handler,\n        clicked_keyword: this.state[\"clicked_keyword\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }\n      }), console.log(this.state[\"customers\"], \"keyword:\", this.state[\"clicked_keyword\"])));\n    } else {\n      var df = this.state.datafeature[0];\n      var ma = this.state.mlacurracy[0];\n      console.log(\"re-reder\", this.state.datafeature);\n      const cardStyle = {\n        display: 'block',\n        //width: '30vw',\n        transitionDuration: '0.3s',\n        height: '7vw'\n      };\n      const options = {\n        scaleShowGridLines: true,\n        scaleGridLineColor: 'rgba(0,0,0,.05)',\n        scaleGridLineWidth: 1,\n        scaleShowHorizontalLines: true,\n        scaleShowVerticalLines: true,\n        bezierCurve: true,\n        bezierCurveTension: 0.4,\n        pointDot: true,\n        pointDotRadius: 4,\n        pointDotStrokeWidth: 1,\n        pointHitDetectionRadius: 20,\n        datasetStroke: true,\n        datasetStrokeWidth: 2,\n        datasetFill: true,\n        legendTemplate: '<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>'\n      };\n      const styles = {\n        graphContainer: {\n          border: '1px solid black',\n          padding: '15px'\n        }\n      };\n      return /*#__PURE__*/React.createElement(Container, {\n        maxWidth: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 12,\n        sm: 12,\n        xl: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: {\n          display: 'block',\n          //width: '30vw',\n          transitionDuration: '0.3s',\n          height: '15vw',\n          backgroundColor: \"blue\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 15\n        }\n      }, this.state.clicked_keyword)), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 12,\n        sm: 12,\n        xl: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }\n      }, this.state.graph.map(x => {\n        console.log(\"map\");\n        return /*#__PURE__*/React.createElement(\"div\", {\n          style: styles.graphContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(Line, {\n          data: this.state.graph_func,\n          options: options,\n          width: \"600\",\n          height: \"250\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }\n        }));\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 12,\n        sm: 12,\n        xl: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: cardStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 15\n        }\n      }, this.state.datafeature.map(x => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 23\n          }\n        }, \"1. \\uAC80\\uC0C9\\uC5B4 \\uB178\\uCD9C\\uB3C4\"), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 23\n          }\n        }, `평균 검색도입니다 (100점 만점) ; ${df.mean}`), /*#__PURE__*/React.createElement(Rating, {\n          defaultValue: rating_mean_func(df.mean),\n          size: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 23\n          }\n        }));\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 12,\n        sm: 12,\n        xl: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: cardStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }\n      }, this.state.datafeature.map(x => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 23\n          }\n        }, \"2. \\uC548\\uC815\\uC131\"), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 23\n          }\n        }, `년을 주기로 얼마나 편차제곱합의 제곱근이 큰지를 알려줍니다 ; ${df.rms}`), /*#__PURE__*/React.createElement(Rating, {\n          defaultValue: rating_rms_func(df.rms),\n          size: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 23\n          }\n        }));\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 12,\n        sm: 12,\n        xl: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: cardStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 15\n        }\n      }, this.state.mlacurracy.map(x => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 23\n          }\n        }, \"3. \\uC8FC\\uAE30\\uC131\"), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 23\n          }\n        }, \"\\uB144\\uC744 \\uC8FC\\uAE30\\uB85C \\uC5BC\\uB9CC\\uD07C \\uC8FC\\uAE30\\uC131\\uC744 \\uAC16\\uB294\\uC9C0 \\uC54C\\uB824\\uC90D\\uB2C8\\uB2E4\"), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 23\n          }\n        }, ma.KNN < ma.SVM ? `SVM algorithm: ${ma.SVM}` : `KNN algorithm: ${ma.KNN}`), /*#__PURE__*/React.createElement(Rating, {\n          defaultValue: rating_algo_func(ma),\n          size: \"large\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 23\n          }\n        }));\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 12,\n        sm: 12,\n        xl: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        style: cardStyle,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 15\n        }\n      }, this.state.datafeature.map(x => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 23\n          }\n        }, \"4. \\uCD94\\uC138\"), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 23\n          }\n        }, \"2016\\uB144 \\uAC80\\uC0C9\\uC5B4 \\uB178\\uCD9C\\uB3C4 max\\uAC12\\uACFC \\uB300\\uBE44\\uD558\\uC5EC  \\uB6F0\\uC5B4\\uB118\\uC740 \\uC801\\uC774 2\\uBC88\\uC788\\uB294 \\uC790\\uB8CC\\uC778\\uC9C0 \\uC124\\uBA85\\uD569\\uB2C8\\uB2E4\"), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 23\n          }\n        }, is_increasing_func(df.is_increasing)));\n      })))));\n    }\n  }\n\n}\n; //export default CustomerListView;","map":{"version":3,"sources":["/home/psc/react-template/react-material-dashboard/src/views/Trendup/clothes/trendrank/index.js"],"names":["React","Component","v4","uuid","Box","Container","makeStyles","Button","Grid","Card","Page","Results","Toolbar","Script","Rating","Line","Chart","rating_mean_func","a","rating_mean","rating_rms_func","rating_rms","is_increasing_func","rating_algo_func","dict","KNN","SVM","rating_algo","myChart","graph_data","useStyles","theme","root","backgroundColor","palette","background","dark","minHeight","paddingBottom","spacing","paddingTop","CustomerListView","constructor","props","state","customers","clicked_keyword","datafeature","mlacurracy","graph","graph_fun","handler","bind","keyword","setState","fetch","then","response","json","data","componentDidMount","map","customer","id","rank","gender","date_","score","render","console","log","df","ma","cardStyle","display","transitionDuration","height","options","scaleShowGridLines","scaleGridLineColor","scaleGridLineWidth","scaleShowHorizontalLines","scaleShowVerticalLines","bezierCurve","bezierCurveTension","pointDot","pointDotRadius","pointDotStrokeWidth","pointHitDetectionRadius","datasetStroke","datasetStrokeWidth","datasetFill","legendTemplate","styles","graphContainer","border","padding","x","graph_func","mean","rms","is_increasing"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport {\n  Box,\n  Container,\n  makeStyles,\n  Button,\n  Grid,\n  Card\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\nimport Script from 'react-load-script'\nimport { Rating } from '@material-ui/lab';\nimport { Line } from 'react-chartjs-2';\nimport Chart from 'chart.js';\n//import data from './data';\n\nfunction rating_mean_func(a) {\n  var rating_mean;\n  //5, 15, 25, 35 \n  if(a > 35){\n    rating_mean = 5;\n  } else if(a > 25){\n    rating_mean = 4;\n  } else if(a >15){\n    rating_mean = 3;\n  } else if(a >5){\n    rating_mean = 2;\n  } else{\n    rating_mean = 1;\n  }\n  return rating_mean\n}\n\nfunction rating_rms_func(a) {\n  var rating_rms;\n  //2,4,6,8 -rms\n  if(a > 8){\n    rating_rms = 1;\n  } else if(a > 6){\n    rating_rms = 2;\n  } else if(a >4){\n    rating_rms = 3;\n  } else if(a >2){\n    rating_rms = 4;\n  } else{\n    rating_rms = 5;\n  }\n  return rating_rms\n}\n\nfunction is_increasing_func(a) {\n  if(a){\n    return \"검색도가 상승하는 추세입니다!\"\n  }\n  else{\n    return \"검색도가 상승하는 추세가 아닙니다.\"\n  }\n}\n\nfunction rating_algo_func(dict){\n  var a = (dict.KNN< dict.SVM)? dict.SVM : dict.KNN;\n  var rating_algo;\n  //90,85,80,70\n  if(a > 90){\n    rating_algo = 5;\n  } else if(a > 85){\n    rating_algo = 4;\n  } else if(a >80){\n    rating_algo = 3;\n  } else if(a >70){\n    rating_algo = 2;\n  } else{\n    rating_algo = 1;\n  }\n  return rating_algo;\n}\n\nfunction  myChart() {\n  \n  return {\"labels\":[\"2016-01-04\",\"2016-01-11\",\"2016-01-18\",\"2016-01-25\",\"2016-02-01\",\"2016-02-08\",\"2016-02-15\",\"2016-02-22\",\"2016-02-29\",\"2016-03-07\",\"2016-03-14\",\"2016-03-21\",\"2016-03-28\",\"2016-04-04\",\"2016-04-11\",\"2016-04-18\",\"2016-04-25\",\"2016-05-02\",\"2016-05-09\",\"2016-05-16\",\"2016-05-23\",\"2016-05-30\",\"2016-06-06\",\"2016-06-13\",\"2016-06-20\",\"2016-06-27\",\"2016-07-04\",\"2016-07-11\",\"2016-07-18\",\"2016-07-25\",\"2016-08-01\",\"2016-08-08\",\"2016-08-15\",\"2016-08-22\",\"2016-08-29\",\"2016-09-05\",\"2016-09-12\",\"2016-09-19\",\"2016-09-26\",\"2016-10-03\",\"2016-10-10\",\"2016-10-17\",\"2016-10-24\",\"2016-10-31\",\"2016-11-07\",\"2016-11-14\",\"2016-11-21\",\"2016-11-28\",\"2016-12-05\",\"2016-12-12\",\"2016-12-19\",\"2016-12-26\",\"2017-01-02\",\"2017-01-09\",\"2017-01-16\",\"2017-01-23\",\"2017-01-30\",\"2017-02-06\",\"2017-02-13\",\"2017-02-20\",\"2017-02-27\",\"2017-03-06\",\"2017-03-13\",\"2017-03-20\",\"2017-03-27\",\"2017-04-03\",\"2017-04-10\",\"2017-04-17\",\"2017-04-24\",\"2017-05-01\",\"2017-05-08\",\"2017-05-15\",\"2017-05-22\",\"2017-05-29\",\"2017-06-05\",\"2017-06-12\",\"2017-06-19\",\"2017-06-26\",\"2017-07-03\",\"2017-07-10\",\"2017-07-17\",\"2017-07-24\",\"2017-07-31\",\"2017-08-07\",\"2017-08-14\",\"2017-08-21\",\"2017-08-28\",\"2017-09-04\",\"2017-09-11\",\"2017-09-18\",\"2017-09-25\",\"2017-10-02\",\"2017-10-09\",\"2017-10-16\",\"2017-10-23\",\"2017-10-30\",\"2017-11-06\",\"2017-11-13\",\"2017-11-20\",\"2017-11-27\",\"2017-12-04\",\"2017-12-11\",\"2017-12-18\",\"2017-12-25\",\"2018-01-01\",\"2018-01-08\",\"2018-01-15\",\"2018-01-22\",\"2018-01-29\",\"2018-02-05\",\"2018-02-12\",\"2018-02-19\",\"2018-02-26\",\"2018-03-05\",\"2018-03-12\",\"2018-03-19\",\"2018-03-26\",\"2018-04-02\",\"2018-04-09\",\"2018-04-16\",\"2018-04-23\",\"2018-04-30\",\"2018-05-07\",\"2018-05-14\",\"2018-05-21\",\"2018-05-28\",\"2018-06-04\",\"2018-06-11\",\"2018-06-18\",\"2018-06-25\",\"2018-07-02\",\"2018-07-09\",\"2018-07-16\",\"2018-07-23\",\"2018-07-30\",\"2018-08-06\",\"2018-08-13\",\"2018-08-20\",\"2018-08-27\",\"2018-09-03\",\"2018-09-10\",\"2018-09-17\",\"2018-09-24\",\"2018-10-01\",\"2018-10-08\",\"2018-10-15\",\"2018-10-22\",\"2018-10-29\",\"2018-11-05\",\"2018-11-12\",\"2018-11-19\",\"2018-11-26\",\"2018-12-03\",\"2018-12-10\",\"2018-12-17\",\"2018-12-24\",\"2018-12-31\",\"2019-01-07\",\"2019-01-14\",\"2019-01-21\",\"2019-01-28\",\"2019-02-04\",\"2019-02-11\",\"2019-02-18\",\"2019-02-25\",\"2019-03-04\",\"2019-03-11\",\"2019-03-18\",\"2019-03-25\",\"2019-04-01\",\"2019-04-08\",\"2019-04-15\",\"2019-04-22\",\"2019-04-29\",\"2019-05-06\",\"2019-05-13\",\"2019-05-20\",\"2019-05-27\",\"2019-06-03\",\"2019-06-10\",\"2019-06-17\",\"2019-06-24\",\"2019-07-01\",\"2019-07-08\",\"2019-07-15\",\"2019-07-22\",\"2019-07-29\",\"2019-08-05\",\"2019-08-12\",\"2019-08-19\",\"2019-08-26\",\"2019-09-02\",\"2019-09-09\",\"2019-09-16\",\"2019-09-23\",\"2019-09-30\",\"2019-10-07\",\"2019-10-14\",\"2019-10-21\",\"2019-10-28\",\"2019-11-04\",\"2019-11-11\",\"2019-11-18\",\"2019-11-25\",\"2019-12-02\",\"2019-12-09\",\"2019-12-16\",\"2019-12-23\"],\"datasets\":{\"label\":\"My First dataset\",\"fillColor\":\"rgba(220,220,220,0.2)\",\"strokeColor\":\"rgba(220,220,220,1)\",\"pointColor\":\"rgba(220,220,220,1)\",\"pointStrokeColor\":\"#fff\",\"pointHighlightFill\":\"#fff\",\"pointHighlightStroke\":\"rgba(220,220,220,1)\",\"data\":[37,26,26,4,4,52,27,27,28,29,9,31,35,72,30,48,79,89,99,121,122,102,104,122,125,82,99,112,142,138,125,70,57,21,41,40,30,8,26,7,4,5,25,4,25,25,25,44,23,4,24,5,45,25,6,5,8,27,45,26,9,9,29,38,30,34,42,48,53,140,130,153,102,93,74,86,103,104,117,141,107,129,96,99,40,36,9,47,8,46,45,4,24,24,44,5,23,5,23,22,5,5,22,22,6,6,41,7,25,25,6,9,28,11,14,13,19,39,53,54,57,90,72,107,114,123,117,98,86,152,87,154,144,159,114,90,87,78,46,44,33,58,24,23,5,5,22,5,5,5,21,22,5,5,23,5,25,25,7,7,5,26,34,43,27,11,27,12,29,30,15,72,81,67,61,128,97,83,112,71,99,130,106,98,129,150,132,144,75,56,57,12,61,26,24,25,39,7,7,7,23,21,6,22,7,7,7,6]}}\n  \n}\n\ngraph_data = {    \"labels\":[\"2016-01-04\",\"2016-01-11\",\"2016-01-18\",\"2016-01-25\",\"2016-02-01\",\"2016-02-08\",\"2016-02-15\",\"2016-02-22\",\"2016-02-29\",\"2016-03-07\",\"2016-03-14\",\"2016-03-21\",\"2016-03-28\",\"2016-04-04\",\"2016-04-11\",\"2016-04-18\",\"2016-04-25\",\"2016-05-02\",\"2016-05-09\",\"2016-05-16\",\"2016-05-23\",\"2016-05-30\",\"2016-06-06\",\"2016-06-13\",\"2016-06-20\",\"2016-06-27\",\"2016-07-04\",\"2016-07-11\",\"2016-07-18\",\"2016-07-25\",\"2016-08-01\",\"2016-08-08\",\"2016-08-15\",\"2016-08-22\",\"2016-08-29\",\"2016-09-05\",\"2016-09-12\",\"2016-09-19\",\"2016-09-26\",\"2016-10-03\",\"2016-10-10\",\"2016-10-17\",\"2016-10-24\",\"2016-10-31\",\"2016-11-07\",\"2016-11-14\",\"2016-11-21\",\"2016-11-28\",\"2016-12-05\",\"2016-12-12\",\"2016-12-19\",\"2016-12-26\",\"2017-01-02\",\"2017-01-09\",\"2017-01-16\",\"2017-01-23\",\"2017-01-30\",\"2017-02-06\",\"2017-02-13\",\"2017-02-20\",\"2017-02-27\",\"2017-03-06\",\"2017-03-13\",\"2017-03-20\",\"2017-03-27\",\"2017-04-03\",\"2017-04-10\",\"2017-04-17\",\"2017-04-24\",\"2017-05-01\",\"2017-05-08\",\"2017-05-15\",\"2017-05-22\",\"2017-05-29\",\"2017-06-05\",\"2017-06-12\",\"2017-06-19\",\"2017-06-26\",\"2017-07-03\",\"2017-07-10\",\"2017-07-17\",\"2017-07-24\",\"2017-07-31\",\"2017-08-07\",\"2017-08-14\",\"2017-08-21\",\"2017-08-28\",\"2017-09-04\",\"2017-09-11\",\"2017-09-18\",\"2017-09-25\",\"2017-10-02\",\"2017-10-09\",\"2017-10-16\",\"2017-10-23\",\"2017-10-30\",\"2017-11-06\",\"2017-11-13\",\"2017-11-20\",\"2017-11-27\",\"2017-12-04\",\"2017-12-11\",\"2017-12-18\",\"2017-12-25\",\"2018-01-01\",\"2018-01-08\",\"2018-01-15\",\"2018-01-22\",\"2018-01-29\",\"2018-02-05\",\"2018-02-12\",\"2018-02-19\",\"2018-02-26\",\"2018-03-05\",\"2018-03-12\",\"2018-03-19\",\"2018-03-26\",\"2018-04-02\",\"2018-04-09\",\"2018-04-16\",\"2018-04-23\",\"2018-04-30\",\"2018-05-07\",\"2018-05-14\",\"2018-05-21\",\"2018-05-28\",\"2018-06-04\",\"2018-06-11\",\"2018-06-18\",\"2018-06-25\",\"2018-07-02\",\"2018-07-09\",\"2018-07-16\",\"2018-07-23\",\"2018-07-30\",\"2018-08-06\",\"2018-08-13\",\"2018-08-20\",\"2018-08-27\",\"2018-09-03\",\"2018-09-10\",\"2018-09-17\",\"2018-09-24\",\"2018-10-01\",\"2018-10-08\",\"2018-10-15\",\"2018-10-22\",\"2018-10-29\",\"2018-11-05\",\"2018-11-12\",\"2018-11-19\",\"2018-11-26\",\"2018-12-03\",\"2018-12-10\",\"2018-12-17\",\"2018-12-24\",\"2018-12-31\",\"2019-01-07\",\"2019-01-14\",\"2019-01-21\",\"2019-01-28\",\"2019-02-04\",\"2019-02-11\",\"2019-02-18\",\"2019-02-25\",\"2019-03-04\",\"2019-03-11\",\"2019-03-18\",\"2019-03-25\",\"2019-04-01\",\"2019-04-08\",\"2019-04-15\",\"2019-04-22\",\"2019-04-29\",\"2019-05-06\",\"2019-05-13\",\"2019-05-20\",\"2019-05-27\",\"2019-06-03\",\"2019-06-10\",\"2019-06-17\",\"2019-06-24\",\"2019-07-01\",\"2019-07-08\",\"2019-07-15\",\"2019-07-22\",\"2019-07-29\",\"2019-08-05\",\"2019-08-12\",\"2019-08-19\",\"2019-08-26\",\"2019-09-02\",\"2019-09-09\",\"2019-09-16\",\"2019-09-23\",\"2019-09-30\",\"2019-10-07\",\"2019-10-14\",\"2019-10-21\",\"2019-10-28\",\"2019-11-04\",\"2019-11-11\",\"2019-11-18\",\"2019-11-25\",\"2019-12-02\",\"2019-12-09\",\"2019-12-16\",\"2019-12-23\"],\"datasets\":{\"label\":\"My First dataset\",\"fillColor\":\"rgba(220,220,220,0.2)\",\"strokeColor\":\"rgba(220,220,220,1)\",\"pointColor\":\"rgba(220,220,220,1)\",\"pointStrokeColor\":\"#fff\",\"pointHighlightFill\":\"#fff\",\"pointHighlightStroke\":\"rgba(220,220,220,1)\",\"data\":[37,26,26,4,4,52,27,27,28,29,9,31,35,72,30,48,79,89,99,121,122,102,104,122,125,82,99,112,142,138,125,70,57,21,41,40,30,8,26,7,4,5,25,4,25,25,25,44,23,4,24,5,45,25,6,5,8,27,45,26,9,9,29,38,30,34,42,48,53,140,130,153,102,93,74,86,103,104,117,141,107,129,96,99,40,36,9,47,8,46,45,4,24,24,44,5,23,5,23,22,5,5,22,22,6,6,41,7,25,25,6,9,28,11,14,13,19,39,53,54,57,90,72,107,114,123,117,98,86,152,87,154,144,159,114,90,87,78,46,44,33,58,24,23,5,5,22,5,5,5,21,22,5,5,23,5,25,25,7,7,5,26,34,43,27,11,27,12,29,30,15,72,81,67,61,128,97,83,112,71,99,130,106,98,129,150,132,144,75,56,57,12,61,26,24,25,39,7,7,7,23,21,6,22,7,7,7,6]}}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n//const classes = useStyles();\n  \n//customers = []\nexport default class CustomerListView extends Component {\n \n  constructor(props){\n    super(props);\n    this.state = {\n      customers: [],\n      clicked_keyword: \"\",\n      datafeature: [],\n      mlacurracy: [],\n      graph: [],\n      graph_fun: myChart()\n    }\n    this.handler = this.handler.bind(this)\n  }\n  handler(keyword){\n    this.setState({\n      clicked_keyword: keyword\n    })\n    fetch('http://localhost:4000/raw?keyword='+ keyword)\n      .then(response => response.json())\n      .then(data => {this.setState({graph:data.data})})\n\n\n    fetch('http://localhost:4000/datafeature?keyword='+ keyword)\n      .then(response => response.json())\n      .then(data => {this.setState({datafeature:data.data})})\n\n\n    fetch('http://localhost:4000/mlacurracy?keyword='+ keyword)\n    .then(response => response.json())\n    .then(data => {this.setState({mlacurracy:data.data})})\n    \n  }\n\n\n  //console.log(\"hello\")\n  async componentDidMount() {\n     fetch('http://localhost:4000/products')\n      .then(response => response.json())\n      .then(data => {this.setState({customers:data.data.map(\n        customer => {\n          return{\n            id: uuid(),\n            rank: customer.rank,\n            keyword: customer.keyword,\n            gender: customer.gender,\n            date_: customer.date_,\n            score: customer.score\n          } \n        }\n          \n      )})})\n\n\n    \n  }\n\n \n\n  render(){\n    if(this.state[\"clicked_keyword\"] == \"\"){\n    return (\n     \n        <Container maxWidth={false}>\n          <Toolbar />\n          <Box mt={3}>\n            \n            <Results customers={this.state[\"customers\"]} handler={this.handler} clicked_keyword={this.state[\"clicked_keyword\"]} />\n            {console.log(this.state[\"customers\"], \"keyword:\",this.state[\"clicked_keyword\"])}\n          </Box>\n        </Container>\n     \n      \n    );\n    }\n    else{\n\n      var df = this.state.datafeature[0]\n      var ma = this.state.mlacurracy[0]\n\n\n      console.log(\"re-reder\",this.state.datafeature)\n      const cardStyle = {\n        display: 'block',\n        //width: '30vw',\n        transitionDuration: '0.3s',\n        height: '7vw'\n      }\n\n      const options = {\n        scaleShowGridLines: true,\n        scaleGridLineColor: 'rgba(0,0,0,.05)',\n        scaleGridLineWidth: 1,\n        scaleShowHorizontalLines: true,\n        scaleShowVerticalLines: true,\n        bezierCurve: true,\n        bezierCurveTension: 0.4,\n        pointDot: true,\n        pointDotRadius: 4,\n        pointDotStrokeWidth: 1,\n        pointHitDetectionRadius: 20,\n        datasetStroke: true,\n        datasetStrokeWidth: 2,\n        datasetFill: true,\n        legendTemplate: '<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>',\n      }\n      \n      const styles = {\n        graphContainer: {\n          border: '1px solid black',\n          padding: '15px'\n        }\n      }\n        \n      return(\n      <Container maxWidth={false}>\n        <Grid\n         container\n         spacing={5}\n         >\n           <Grid\n              item\n              lg={12}\n              sm={12}\n              xl={12}\n              xs={12}\n            >\n              <Card style={{\n                 display: 'block',\n                 //width: '30vw',\n                 transitionDuration: '0.3s',\n                 height: '15vw',\n                 backgroundColor: \"blue\" \n              }}>\n                  {this.state.clicked_keyword}\n              </Card>\n            </Grid>\n            <Grid\n              item\n              lg={12}\n              sm={12}\n              xl={12}\n              xs={12}\n            >\n             {this.state.graph.map(x => {\n               console.log(\"map\",)\n               return (\n                <div style={styles.graphContainer}>\n                <Line data={this.state.graph_func}\n                  options={options}\n                  width=\"600\" height=\"250\"/>\n              </div>\n               )\n\n             })}\n            </Grid>\n            <Grid\n              item\n              lg={12}\n              sm={12}\n              xl={12}\n              xs={12}\n            >\n              <Card style={cardStyle}>\n                  {this.state.datafeature.map(x => {\n                    return (<div>\n                      <div>1. 검색어 노출도</div>\n                      <div>{`평균 검색도입니다 (100점 만점) ; ${df.mean}`}</div>\n                      <Rating  defaultValue={rating_mean_func(df.mean)} size=\"large\" />\n                    </div>\n                    )\n                  })}\n              </Card>\n            </Grid>\n         \n            <Grid\n              item\n              lg={12}\n              sm={12}\n              xl={12}\n              xs={12}\n            >\n              <Card style={cardStyle}>\n              {this.state.datafeature.map(x => {\n                    return (<div>\n                      <div>2. 안정성</div>\n                      <div>{`년을 주기로 얼마나 편차제곱합의 제곱근이 큰지를 알려줍니다 ; ${df.rms}`}</div>\n                      <Rating  defaultValue={rating_rms_func(df.rms)} size=\"large\" />\n                    </div>\n                    )\n                  })}\n              </Card>\n            </Grid>\n          \n            <Grid\n              item\n              lg={12}\n              sm={12}\n              xl={12}\n              xs={12}\n            >\n              <Card style={cardStyle}>\n              {this.state.mlacurracy.map(x => {\n                    return (<div>\n                      <div>3. 주기성</div>\n                      <div>년을 주기로 얼만큼 주기성을 갖는지 알려줍니다</div>\n                      <div>{(ma.KNN < ma.SVM)?(`SVM algorithm: ${ma.SVM}`):(`KNN algorithm: ${ma.KNN}`)}</div>\n                      <Rating  defaultValue={rating_algo_func(ma)} size=\"large\" />\n                    </div>\n                    )\n                  })}\n              </Card>\n            </Grid>\n          \n            <Grid\n              item\n              lg={12}\n              sm={12}\n              xl={12}\n              xs={12}\n            >\n              <Card style={cardStyle}>\n              {this.state.datafeature.map(x => {\n                    return (<div>\n                      <div>4. 추세</div>\n                      <div>2016년 검색어 노출도 max값과 대비하여  뛰어넘은 적이 2번있는 자료인지 설명합니다</div>\n                      <div>{is_increasing_func(df.is_increasing)}</div>\n                    </div>\n                    )\n                  })}\n              </Card>\n            </Grid>\n          \n        </Grid>\n      </Container>\n      );\n    }\n  }\n};\n\n//export default CustomerListView;\n"]},"metadata":{},"sourceType":"module"}