{"ast":null,"code":"var _jsxFileName = \"/home/psc/react-template/react-material-dashboard/src/views/Trendup/clothes/trendmap/Map.js\";\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Sigma, RandomizeNodePositions, RelativeSize } from 'react-sigma';\nimport { Avatar, Box, Card, Checkbox, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Typography, makeStyles } from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Map = ({\n  className,\n  myGraph,\n  ...rest\n}) => {\n  console.log(\"11\", myGraph);\n  return /*#__PURE__*/React.createElement(Sigma, {\n    graph: myGraph,\n    settings: {\n      drawEdges: true,\n      clone: false,\n      labelThreshold: true\n    },\n    onClickNode: e => console.log(\"clicked: \", e.data.node[\"label\"]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RelativeSize, {\n    initialSize: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(RandomizeNodePositions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default Map;","map":{"version":3,"sources":["/home/psc/react-template/react-material-dashboard/src/views/Trendup/clothes/trendmap/Map.js"],"names":["React","useState","clsx","PropTypes","moment","PerfectScrollbar","Sigma","RandomizeNodePositions","RelativeSize","Avatar","Box","Card","Checkbox","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Typography","makeStyles","getInitials","useStyles","theme","root","avatar","marginRight","spacing","Map","className","myGraph","rest","console","log","drawEdges","clone","labelThreshold","e","data","node"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SAAQC,KAAR,EAAeC,sBAAf,EAAuCC,YAAvC,QAA0D,aAA1D;AACA,SACEC,MADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,QAJF,EAKEC,KALF,EAMEC,SANF,EAOEC,SAPF,EAQEC,SARF,EASEC,eATF,EAUEC,QAVF,EAWEC,UAXF,EAYEC,UAZF,QAaO,mBAbP;AAcA,OAAOC,WAAP,MAAwB,uBAAxB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAEG,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE,EADiC;AAEvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,WAAW,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AADP;AAF+B,CAAZ,CAAD,CAA5B;;AAOA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsB,KAAGC;AAAzB,CAAD,KAAqC;AAE7CC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAiBH,OAAjB;AAEF,sBACE,oBAAC,KAAD;AACA,IAAA,KAAK,EAAEA,OADP;AACgB,IAAA,QAAQ,EAAE;AAACI,MAAAA,SAAS,EAAE,IAAZ;AAAkBC,MAAAA,KAAK,EAAE,KAAzB;AAA+BC,MAAAA,cAAc,EAAE;AAA/C,KAD1B;AAEA,IAAA,WAAW,EAAEC,CAAC,IAAGL,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBI,CAAC,CAACC,IAAF,CAAOC,IAAP,CAAY,OAAZ,CAAzB,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIA,oBAAC,YAAD;AAAc,IAAA,WAAW,EAAE,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,eAKA,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,CADF;AASD,CAbD;;AAiBA,eAAeX,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {Sigma, RandomizeNodePositions, RelativeSize} from 'react-sigma';\nimport {\n  Avatar,\n  Box,\n  Card,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  avatar: {\n    marginRight: theme.spacing(2)\n  }\n}));\n\nconst Map = ({ className, myGraph, ...rest }) => {\n  \n    console.log(\"11\",myGraph)\n\n  return (\n    <Sigma\n    graph={myGraph} settings={{drawEdges: true, clone: false,labelThreshold: true}}\n    onClickNode={e=> console.log(\"clicked: \", e.data.node[\"label\"])}\n  >\n    <RelativeSize initialSize={50}/>\n    <RandomizeNodePositions/>\n  </Sigma>\n  );\n};\n\n\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}