{"ast":null,"code":"var _jsxFileName = \"/home/psc/react-template/react-material-dashboard/src/views/Trendup/clothes/trendrank/index.js\";\nimport React, { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { Box, Container, makeStyles, Button, Grid, Card } from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\nimport Script from 'react-load-script'; //import data from './data';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n})); //const classes = useStyles();\n//customers = []\n\nexport default class CustomerListView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      customers: [],\n      clicked_keyword: \"\"\n    };\n    this.handler = this.handler.bind(this);\n  }\n\n  handler(keyword) {\n    this.setState({\n      clicked_keyword: keyword\n    });\n    console.log(\"77\", this);\n  } //console.log(\"hello\")\n\n\n  async componentDidMount() {\n    fetch('http://localhost:4000/products').then(response => response.json()).then(data => {\n      this.setState({\n        customers: data.data\n      });\n    }); //const data = await response.json();\n    //console.log(data);\n\n    console.log(this); //this.state[\"customers\"] = data.data\n    //console.log(this)\n    //this.setState({customers: data.data })\n\n    /*\n    fetch('http://localhost:4000/products')\n      .then(response => response.json())\n      .then(response => this.setState({customers: response.data.map(\n        \n      customer => {\n        return{\n          id: uuid(),\n          rank: customer.rank,\n          keyword: customer.keyword,\n          gender: customer.gender,\n          date_: customer.date_,\n          score: customer.score\n        } \n        \n       }\n    \n        )}))\n      */\n  } //console.log(\"print\")\n  //console.log(\"2\",customers)\n\n\n  render() {\n    if (this.state[\"clicked_keyword\"] == \"\") {\n      return /*#__PURE__*/React.createElement(Container, {\n        maxWidth: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Toolbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(Box, {\n        mt: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Results, {\n        customers: this.state[\"customers\"],\n        handler: this.handler,\n        clicked_keyword: this.state[\"clicked_keyword\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }), console.log(this.state[\"customers\"], \"keyword:\", this.state[\"clicked_keyword\"])));\n    } else {\n      /*{<Button>\n      {this.state.clicked_keyword}\n      \n      </Button>}*/\n      return /*#__PURE__*/React.createElement(Container, {\n        maxWidth: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        spacing: 5,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 12,\n        sm: 12,\n        xl: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 14\n        }\n      }, \"1. \\uAC80\\uC0C9 \\uB178\\uCD9C\\uB3C4\")), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        lg: 12,\n        sm: 12,\n        xl: 12,\n        xs: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 14\n        }\n      }, \"2. \\uC548\\uC815\\uC131\"))));\n    }\n  }\n\n}\n; //export default CustomerListView;","map":{"version":3,"sources":["/home/psc/react-template/react-material-dashboard/src/views/Trendup/clothes/trendrank/index.js"],"names":["React","Component","v4","uuid","Box","Container","makeStyles","Button","Grid","Card","Page","Results","Toolbar","Script","useStyles","theme","root","backgroundColor","palette","background","dark","minHeight","paddingBottom","spacing","paddingTop","CustomerListView","constructor","props","state","customers","clicked_keyword","handler","bind","keyword","setState","console","log","componentDidMount","fetch","then","response","json","data","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport {\n  Box,\n  Container,\n  makeStyles,\n  Button,\n  Grid,\n  Card\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport Results from './Results';\nimport Toolbar from './Toolbar';\nimport Script from 'react-load-script'\n//import data from './data';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n//const classes = useStyles();\n  \n//customers = []\nexport default class CustomerListView extends Component {\n \n  constructor(props){\n    super(props);\n    this.state = {\n      customers: [],\n      clicked_keyword: \"\"\n    }\n    this.handler = this.handler.bind(this)\n  }\n  handler(keyword){\n    this.setState({\n      clicked_keyword: keyword\n    })\n    console.log(\"77\", this)\n\n  }\n\n\n  //console.log(\"hello\")\n  async componentDidMount() {\n     fetch('http://localhost:4000/products')\n      .then(response => response.json())\n      .then(data => {this.setState({customers:data.data})})\n    //const data = await response.json();\n    //console.log(data);\n    console.log(this);\n    //this.state[\"customers\"] = data.data\n    //console.log(this)\n    //this.setState({customers: data.data })\n    /*\n    fetch('http://localhost:4000/products')\n      .then(response => response.json())\n      .then(response => this.setState({customers: response.data.map(\n        \n      customer => {\n        return{\n          id: uuid(),\n          rank: customer.rank,\n          keyword: customer.keyword,\n          gender: customer.gender,\n          date_: customer.date_,\n          score: customer.score\n        } \n        \n       }\n    \n\n\n      )}))\n      */\n  }\n  \n  //console.log(\"print\")\n  //console.log(\"2\",customers)\n \n\n  render(){\n    if(this.state[\"clicked_keyword\"] == \"\"){\n    return (\n     \n        <Container maxWidth={false}>\n          <Toolbar />\n          <Box mt={3}>\n            \n            <Results customers={this.state[\"customers\"]} handler={this.handler} clicked_keyword={this.state[\"clicked_keyword\"]} />\n            {console.log(this.state[\"customers\"], \"keyword:\",this.state[\"clicked_keyword\"])}\n          </Box>\n        </Container>\n     \n      \n    );\n    }\n    else{\n        /*{<Button>\n        {this.state.clicked_keyword}\n        \n      </Button>}*/\n      return(\n      <Container maxWidth={false}>\n        <Grid\n         container\n         spacing={5}\n         >\n           <Grid\n            item\n            lg={12}\n            sm={12}\n            xl={12}\n            xs={12}\n           >\n             <Card>\n                1. 검색 노출도\n             </Card>\n           </Grid>\n\n           <Grid\n            item\n            lg={12}\n            sm={12}\n            xl={12}\n            xs={12}\n           >\n             <Card>\n               2. 안정성\n             </Card>\n           </Grid>\n        </Grid>\n      </Container>\n      );\n    }\n  }\n};\n\n//export default CustomerListView;\n"]},"metadata":{},"sourceType":"module"}