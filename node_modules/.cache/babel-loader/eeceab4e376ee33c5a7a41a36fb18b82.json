{"ast":null,"code":"var _jsxFileName = \"/home/psc/react-template/react-material-dashboard/src/views/Trendup/clothes/trendmap/index.js\";\nimport React, { Component } from 'react';\nimport { Sigma, RandomizeNodePositions, RelativeSize } from 'react-sigma';\nimport { Container, Grid, makeStyles, Card } from '@material-ui/core';\nimport Page from 'src/components/Page';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\nexport default class Trendup extends Component {\n  //const classes = useStyles();\n  constructor(props) {\n    super(props);\n    this.state = {\n      myGraph: {\n        nodes: [],\n        edges: []\n      }\n    };\n  } //let myGraph = {nodes:[{id:\"n1\", size:1, label:\"alice\"},{id:\"n2\", size: 1, label:\"rabit\"}, {id:\"n3\", size: 10, label:\"me\"}],\n  // edges:[{id:\"e1\", source:\"n1\", target:\"n2\", size:5}, {id:\"e2\", source:\"n2\", target:\"n3\", size:1}]}\n\n\n  async componentDidMount() {\n    fetch('http://localhost:4000/node').then(response => response.json()).then(data => this.state[\"myGraph\"][\"nodes\"] = data.data.map(x => {\n      return {\n        id: x[\"channel_id\"],\n        size: 1,\n        label: `${x[\"title\"]}(${x[\"subscriber_count\"]})`\n      };\n    }));\n    fetch('http://localhost:4000/edge').then(response => response.json()).then(data => this.state[\"myGraph\"][\"edges\"] = data.data.map(x => {\n      return {\n        id: `${x[\"source_id\"]}${x[\"target_id\"]}`,\n        source: x[\"source_id\"],\n        target: x[\"target_id\"],\n        size: x[\"size\"]\n      };\n    })).then(data => console.log(myGraph));\n  }\n\n  return() {\n    return /*#__PURE__*/React.createElement(Container, {\n      maxWidth: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      minHeight: \"200%\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Sigma, {\n      graph: myGraph,\n      settings: {\n        drawEdges: true,\n        clone: false,\n        labelThreshold: true\n      },\n      onClickNode: e => console.log(\"clicked: \", e.data.node[\"label\"]),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(RelativeSize, {\n      initialSize: 50,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(RandomizeNodePositions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n;","map":{"version":3,"sources":["/home/psc/react-template/react-material-dashboard/src/views/Trendup/clothes/trendmap/index.js"],"names":["React","Component","Sigma","RandomizeNodePositions","RelativeSize","Container","Grid","makeStyles","Card","Page","useStyles","theme","root","backgroundColor","palette","background","dark","minHeight","paddingBottom","spacing","paddingTop","Trendup","constructor","props","state","myGraph","nodes","edges","componentDidMount","fetch","then","response","json","data","map","x","id","size","label","source","target","console","log","return","drawEdges","clone","labelThreshold","e","node"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Sigma, RandomizeNodePositions, RelativeSize} from 'react-sigma';\nimport {\n  Container,\n  Grid,\n  makeStyles,\n  Card\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nexport default class Trendup extends Component {\n  //const classes = useStyles();\n\n  constructor(props){\n    super(props);\n    this.state = {\n      myGraph: {\n        nodes: [],\n        edges: []\n      }\n    }\n  }\n  //let myGraph = {nodes:[{id:\"n1\", size:1, label:\"alice\"},{id:\"n2\", size: 1, label:\"rabit\"}, {id:\"n3\", size: 10, label:\"me\"}],\n  // edges:[{id:\"e1\", source:\"n1\", target:\"n2\", size:5}, {id:\"e2\", source:\"n2\", target:\"n3\", size:1}]}\n\n  async componentDidMount(){\n   fetch('http://localhost:4000/node')\n      .then(response => response.json())\n      .then(data => this.state[\"myGraph\"][\"nodes\"] = data.data.map(\n        x => {\n          return {\n            id : x[\"channel_id\"],\n            size: 1,\n            label: `${x[\"title\"]}(${x[\"subscriber_count\"]})`\n          }\n        }\n      ))\n   fetch('http://localhost:4000/edge')\n      .then(response => response.json())\n      .then(data => this.state[\"myGraph\"][\"edges\"] = data.data.map(\n        x => {\n          return {\n            id: `${x[\"source_id\"]}${x[\"target_id\"]}`,\n            source: x[\"source_id\"],\n            target: x[\"target_id\"],\n            size: x[\"size\"]\n          }\n        }\n      ))\n      .then(data => console.log(myGraph))\n      }\n  return(){\n    return (\n  \n        <Container maxWidth={false}>\n          {\n          \n          }\n\n          <Card\n            minHeight = \"200%\"\n          >\n            <Sigma\n              graph={myGraph} settings={{drawEdges: true, clone: false,labelThreshold: true}}\n              onClickNode={e=> console.log(\"clicked: \", e.data.node[\"label\"])}\n            >\n              <RelativeSize initialSize={50}/>\n              <RandomizeNodePositions/>\n            </Sigma>\n          </Card>\n            {/*\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              lg={3}\n              sm={6}\n              xl={3}\n              xs={12}\n            >\n              <Budget />\n            </Grid>\n            <Grid\n              item\n              lg={3}\n              sm={6}\n              xl={3}\n              xs={12}\n            >\n              <TotalCustomers />\n            </Grid>\n            <Grid\n              item\n              lg={3}\n              sm={6}\n              xl={3}\n              xs={12}\n            >\n              <TasksProgress />\n            </Grid>\n            <Grid\n              item\n              lg={3}\n              sm={6}\n              xl={3}\n              xs={12}\n            >\n              <TotalProfit />\n            </Grid>\n            <Grid\n              item\n              lg={8}\n              md={12}\n              xl={9}\n              xs={12}\n            >\n              <Sales />\n            </Grid>\n            <Grid\n              item\n              lg={4}\n              md={6}\n              xl={3}\n              xs={12}\n            >\n              <TrafficByDevice />\n            </Grid>\n            <Grid\n              item\n              lg={4}\n              md={6}\n              xl={3}\n              xs={12}\n            >\n              <LatestProducts />\n            </Grid>\n            <Grid\n              item\n              lg={8}\n              md={12}\n              xl={9}\n              xs={12}\n            >\n              <LatestOrders />\n            </Grid>\n          </Grid>\n            */}\n        </Container>\n  \n    );\n  }\n};\n\n\n"]},"metadata":{},"sourceType":"module"}