{"ast":null,"code":"var _jsxFileName = \"/home/psc/react-template/react-material-dashboard/src/views/Trendup/clothes/trendmap/index.js\";\nimport React, { Component } from 'react';\nimport { Sigma, RandomizeNodePositions, RelativeSize } from 'react-sigma';\nimport { Container, Grid, makeStyles, Card } from '@material-ui/core';\nimport Page from 'src/components/Page';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Trendup = () => {\n  const classes = useStyles();\n  let myGraph = {\n    nodes: [{\n      id: \"n1\",\n      size: 1,\n      label: \"alice\"\n    }, {\n      id: \"n2\",\n      size: 1,\n      label: \"rabit\"\n    }, {\n      id: \"n3\",\n      size: 10,\n      label: \"me\"\n    }],\n    edges: [{\n      id: \"e1\",\n      source: \"n1\",\n      target: \"n2\",\n      size: 5\n    }, {\n      id: \"e2\",\n      source: \"n2\",\n      target: \"n3\",\n      size: 1\n    }]\n  };\n  fetch('http://localhost:4000/node').then(response => response.json()).then(data => myGraph[\"nodes\"] = data.data.map(x => {\n    return {\n      id: x[\"channel_id\"],\n      size: 1,\n      label: `${x[\"title\"]}(${x[\"subscriber_count\"]})`\n    };\n  }));\n  fetch('http://localhost:4000/edge').then(response => response.json()).then(data => myGraph[\"edges\"] = data.data.map(x => {\n    return {\n      id: `${x[\"source_id\"]}${x[\"target_id\"]}`,\n      source: x[\"source_id\"],\n      target: x[\"target_id\"],\n      size: x[\"size\"]\n    };\n  })).then(data => console.log(myGraph));\n  return /*#__PURE__*/React.createElement(Page, {\n    className: classes.root,\n    title: \"Dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    maxWidth: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    minHeight: \"200%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Sigma, {\n    graph: myGraph,\n    settings: {\n      drawEdges: true,\n      clone: false,\n      labelThreshold: true\n    },\n    onClickNode: e => console.log(\"clicked: \", e.data.node[\"label\"]),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(RelativeSize, {\n    initialSize: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(RandomizeNodePositions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Trendup;","map":{"version":3,"sources":["/home/psc/react-template/react-material-dashboard/src/views/Trendup/clothes/trendmap/index.js"],"names":["React","Component","Sigma","RandomizeNodePositions","RelativeSize","Container","Grid","makeStyles","Card","Page","useStyles","theme","root","backgroundColor","palette","background","dark","minHeight","paddingBottom","spacing","paddingTop","Trendup","classes","myGraph","nodes","id","size","label","edges","source","target","fetch","then","response","json","data","map","x","console","log","drawEdges","clone","labelThreshold","e","node"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {Sigma, RandomizeNodePositions, RelativeSize} from 'react-sigma';\nimport {\n  Container,\n  Grid,\n  makeStyles,\n  Card\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Trendup = () => {\n  const classes = useStyles();\n\n  let myGraph = {nodes:[{id:\"n1\", size:1, label:\"alice\"},{id:\"n2\", size: 1, label:\"rabit\"}, {id:\"n3\", size: 10, label:\"me\"}],\n   edges:[{id:\"e1\", source:\"n1\", target:\"n2\", size:5}, {id:\"e2\", source:\"n2\", target:\"n3\", size:1}]}\n\n   fetch('http://localhost:4000/node')\n      .then(response => response.json())\n      .then(data => myGraph[\"nodes\"] = data.data.map(\n        x => {\n          return {\n            id : x[\"channel_id\"],\n            size: 1,\n            label: `${x[\"title\"]}(${x[\"subscriber_count\"]})`\n          }\n        }\n      ))\n   fetch('http://localhost:4000/edge')\n      .then(response => response.json())\n      .then(data => myGraph[\"edges\"] = data.data.map(\n        x => {\n          return {\n            id: `${x[\"source_id\"]}${x[\"target_id\"]}`,\n            source: x[\"source_id\"],\n            target: x[\"target_id\"],\n            size: x[\"size\"]\n          }\n        }\n      ))\n      .then(data => console.log(myGraph))\n  \n   \n  return (\n    <Page\n      className={classes.root}\n      title=\"Dashboard\"\n    >\n      <Container maxWidth={false}>\n        {\n         \n        }\n\n        <Card\n          minHeight = \"200%\"\n        >\n          <Sigma\n            graph={myGraph} settings={{drawEdges: true, clone: false,labelThreshold: true}}\n            onClickNode={e=> console.log(\"clicked: \", e.data.node[\"label\"])}\n          >\n            <RelativeSize initialSize={50}/>\n            <RandomizeNodePositions/>\n          </Sigma>\n        </Card>\n          {/*\n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <Budget />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalCustomers />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TasksProgress />\n          </Grid>\n          <Grid\n            item\n            lg={3}\n            sm={6}\n            xl={3}\n            xs={12}\n          >\n            <TotalProfit />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <Sales />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <TrafficByDevice />\n          </Grid>\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xl={3}\n            xs={12}\n          >\n            <LatestProducts />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={12}\n            xl={9}\n            xs={12}\n          >\n            <LatestOrders />\n          </Grid>\n        </Grid>\n          */}\n      </Container>\n    </Page>\n  );\n};\n\nexport default Trendup;\n"]},"metadata":{},"sourceType":"module"}